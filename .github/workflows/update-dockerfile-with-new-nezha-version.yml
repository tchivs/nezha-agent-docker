name: Update Dockerfile with New Nezha Version

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时检查一次
  workflow_dispatch:  # 手动触发

jobs:
  check-new-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get latest release tag from NezhaHQ
        id: get_latest_tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/nezhahq/agent/releases/latest | jq -r .tag_name)
          echo "LATEST_TAG=${LATEST_TAG}"
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Check if tag already exists locally
        id: check_tag_exists_locally
        run: |
          if git rev-parse "refs/tags/${{ env.LATEST_TAG }}" >/dev/null 2>&1; then
            echo "Tag already exists locally. No update needed."
            echo "tag_exists_locally=true" >> $GITHUB_ENV
            exit 0
          else
            echo "tag_exists_locally=false" >> $GITHUB_ENV
          fi

      - name: Check if tag already exists remotely
        id: check_tag_exists_remotely
        run: |
          if git ls-remote --tags origin | grep "refs/tags/${{ env.LATEST_TAG }}" >/dev/null 2>&1; then
            echo "Tag already exists remotely. No update needed."
            echo "tag_exists_remotely=true" >> $GITHUB_ENV
            exit 0
          else
            echo "tag_exists_remotely=false" >> $GITHUB_ENV
          fi

      - name: Update Dockerfile and Fetch latest commit info
        run: |
          if [ "${{ env.tag_exists_locally }}" = "true" ] || [ "${{ env.tag_exists_remotely }}" = "true" ]; then
            exit 0
          fi
          echo "Fetching latest commit info..."
          LATEST_TAG_COMMIT_URL=$(curl -s https://api.github.com/repos/nezhahq/agent/git/refs/tags/${{ env.LATEST_TAG }} | jq -r .object.url)
          LATEST_TAG_MESSAGE=$(curl -s ${LATEST_TAG_COMMIT_URL} | jq -r .message)
          echo "LATEST_TAG_COMMIT_URL=${LATEST_TAG_COMMIT_URL}"
          echo "LATEST_TAG_MESSAGE=${LATEST_TAG_MESSAGE}"
          echo "LATEST_TAG_COMMIT_URL=${LATEST_TAG_COMMIT_URL}" >> $GITHUB_ENV
          echo "LATEST_TAG_MESSAGE=${LATEST_TAG_MESSAGE}" >> $GITHUB_ENV
          echo "Updating Dockerfile..."
          sed -i "s/ARG NEZHA_VER=.*/ARG NEZHA_VER=${{ env.LATEST_TAG }}/" Dockerfile
          echo "Updated Dockerfile with NEZHA_VER=${{ env.LATEST_TAG }}"
          git add Dockerfile

      - name: Check for changes and Commit
        run: |
          if [ "${{ env.tag_exists_locally }}" = "true" ] || [ "${{ env.tag_exists_remotely }}" = "true" ]; then
            exit 0
          fi
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          else
            echo "Changes detected. Proceeding with commit."
            git config --global user.name "${{ github.actor }}"
            git config --global user.email "${{ github.actor }}@users.noreply.github.com"
            COMMIT_MESSAGE="Update Dockerfile to NEZHA_VER=${{ env.LATEST_TAG }} - ${LATEST_TAG_MESSAGE}"
            git commit -m "${COMMIT_MESSAGE}"
            git push
          fi

      - name: Tag the repository
        if: env.tag_exists_locally == 'false' && env.tag_exists_remotely == 'false'
        env:
          GH_TOKEN: ${{ secrets.PAT  }}
        run: |
          git tag ${{ env.LATEST_TAG }}
          git push origin ${{ env.LATEST_TAG }}
